from create_bot import bot
from aiogram import types
from aiogram import Dispatcher
from Keyboards import Client_kb
from FSM.CreateOrderingFSM import Temp_price
import bd_func
from bd_func import admin  # 814991257
total_value = 0


async def callback_d(callback: types.CallbackQuery):
    if callback.data == 'Manager_AandQ':
        await bot.send_message(callback.from_user.id, '@KaLiNkA_77', reply_markup=Client_kb.call_manager_kb)
        await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
    elif callback.data == 'Collaboration_AandQ':
        await bot.send_message(callback.from_user.id, 'Ok')

        await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
    elif callback.data == 'Payment_AandQ':
        await bot.send_message(callback.from_user.id, '–û–± –æ–ø–ª–∞—Ç–µ', reply_markup=Client_kb.AandQ_Payment_kb)
        await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
    elif callback.data == 'Order_AandQ':
        await bot.send_message(callback.from_user.id, '–û –ó–∞–∫–∞–∑–µ', reply_markup=Client_kb.AandQ_order_kb)
        await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)

    elif callback.data == 'Edits_Order_AandQ':
        await bot.send_message(callback.from_user.id, '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ —Ç–æ –æ–± —ç—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ '
                                                      '—Å–æ–æ–±—â–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É. \n\n–ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã. '
                                                      '–ï—Å–ª–∏ –ø—Ä–∞–≤–∫–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –º–µ–Ω—è—é—Ç –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ —Ç–æ –∑–∞ —ç—Ç–æ '
                                                      '–ø—Ä–∏–¥–µ—Ç—Å—è –¥–æ–ø–ª–∞—Ç–∏—Ç—å –∏(–∏–ª–∏) –±—ã–ª–∏ —Å–æ–æ–±—â–µ–Ω—ã —É–∂–µ –ø–æ—Å–ª–µ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å'
                                                      ' –¥–µ–º–æ–Ω—Å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π —Ç–æ –ø—Ä–∏–¥–µ—Ç—Å—è –¥–æ–ø–ª–∞—Ç–∏—Ç—å. –°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞–º '
                                                      '—Å–æ–æ–±—â–∏—Ç –º–µ–Ω–µ–¥–∂–µ—Ä.\n@KaLiNkA_77',
                               reply_markup=Client_kb.call_manager_kb)
        await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)

    elif callback.data == 'time_Order_AandQ':
        await bot.send_message(callback.from_user.id, '–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞, –æ–±—ã—á–Ω–æ '
                                                      '–Ω–∞ –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Ö–æ–¥–∏—Ç –æ—Ç 1 –¥–æ 5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π. \n\n'
                                                      '–ï—Å–ª–∏ –≤–∞—à –∑–∞–∫–∞–∑ —Å–ª–∏—à–∫–æ–º –æ–±—ä–µ–º–Ω—ã–π —Ç–æ –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è '
                                                      '–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞–º —Å–æ–æ–±—â–∏—Ç –º–µ–Ω–µ–¥–∂–µ—Ä.\n@KaLiNkA_77',
                               reply_markup=Client_kb.call_manager_kb)
        await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)

    elif callback.data == 'guarantees_Payment_AandQ':
        await bot.send_message(callback.from_user.id, '–ú—ã –Ω–µ –±–µ—Ä–µ–º 100% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É. \n–ú—ã –±–µ—Ä–µ–º 50% –ø–æ—Å–ª–µ –¥–µ–º–æ –≤–µ—Ä—Å–∏–∏ '
                                                      '–≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞, –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ 50% —É–∂–µ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.',
                               reply_markup=Client_kb.call_manager_kb)
        await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)

    elif callback.data == 'methods_Payment_AandQ':
        await bot.send_message(callback.from_user.id, '–û–ø–ª–∞—Ç—É –º—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–∞—Ä—Ç—É',
                               reply_markup=Client_kb.call_manager_kb)
        await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)

    else:
        await bot.send_message(callback.from_user.id, '–•–º, –∫–∞–∫–∞—è —Å—Ç—Ä–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞')


async def help_func(message: types.Message):
    await bot.send_message(message.from_user.id, '–î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º:'
                                                 '\n–í –∫–∞—Ç–∞–ª–æ–≥–µ —Ç—ã –Ω–∞–π–¥–µ—à—å –ª—É—á—à–∏–µ –Ω–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã'
                                                 '\n–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑, –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—â—É—é –∫–Ω–æ–ø–∫—É'
                                                 '\n–ß—Ç–æ–±—ã –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–∂–º–∏—Ç–µ –°–≤—è–∑–∞—Ç—å—Å—è —Å '
                                                 '–º–µ–Ω–µ–¥–∂–µ—Ä–æ–º. –¢–∞–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–∞–º—ã–µ —á–∞—Å—Ç–æ–∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã')


async def text(message: types.Message):
    global total_value
    if message.from_user.id in admin:


        try:
            a = int(message.text)
            total_value += a
        except:
            pass

        if message.text == 'osir4899dij95ijfnomwo9cje8icokwiood0e84678cj8i9eiijjidkvolxk':
            admin.remove(message.from_user.id)

        elif message.text == '–ó–∞—Ä–∞–±–æ—Ç–æ–∫':
            await bot.send_message(message.from_user.id, 'ü§ë')
            await bot.send_message(message.from_user.id, f'–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è –º—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏: {total_value}')

        elif message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
            a = bd_func.get_ids_of_users()
            total_price = 0
            for i in Temp_price.values():
                total_price += int(i)
            await bot.send_message(message.from_user.id, f'–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(a)}')

        elif message.text == '–ó–∞–∫–∞–∑—ã':
            a = bd_func.get_orders()  # id, user_id_tg, bit, recording, mixing , platforms, about, numbers, price
            b = bd_func.get_users()
            x = 0
            for order in a:
                for user in b:
                    if order[1] == user[1]:
                        x += 1
                        await bot.send_message(message.from_user.id,
                                               f"{order[1]}  |  {order[2]}  |  {order[3]}  |  {order[4]}  |  "
                                               f"{order[5]}  |  {order[6]}  |  {user[3]}  |  {order[8]}—Ä.")
            if x == 0:
                await bot.send_message(message.from_user.id, "–ó–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç—É")

        elif message.text == '–ó–∞—è–≤–∫–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É':
            a = bd_func.get_offers()
            x = 0
            for i in a:
                x += 1
                await bot.send_message(message.from_user.id, f"{i[1]}  |  {i[2]}  |  {i[3]}  |  {i[5]}")

            if x == 0:
                await bot.send_message(message.from_user.id, "–ó–∞—è–≤–æ–∫ –Ω–∞ —Ä–∞–±–æ—Ç—É –Ω–µ—Ç)")

        elif message.text == '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
            await bot.send_message(message.from_user.id, "ü§©")
            a = bd_func.get_users()
            if a:

                for i in a:
                    print(type(i[1]))
                    print(type(message.from_user.id))
                    await bot.send_message(message.from_user.id, f"{i[1]}  |  {i[2]}  |  {i[3]}  |  {i[4]}")
            else:
                await bot.send_message(message.from_user.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç—É")

    else:
        if message.text == 'osir4899dij95ijfnomwo9cje8icokwiood0e84678cj8i9eiijjidkvolxk':
            admin.append(message.from_user.id)

        elif message.text == '–ö–∞—Ç–∞–ª–æ–≥':

            await bot.send_message(message.from_user.id, '–°–Ω–∏–ø–µ—Ç—ã –Ω–∞—à–∏—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤:')
            await bot.send_audio(message.chat.id, open('data/Ever.mp3', 'rb'))

        elif message.text == '–ú–æ–∏ –∑–∞–∫–∞–∑—ã':
            a = bd_func.get_orders()
            x = 0
            await bot.send_message(message.from_user.id, "ü§ñ")
            for i in a:
                if i[1] == str(message.from_user.id):
                    if x == 0:
                        await bot.send_message(message.from_user.id, "–í–∞—à–∏ –∑–∞–∫–∞–∑—ã:")
                    x += 1
                    await bot.send_message(message.from_user.id, f"{i[2]}  |  {i[3]}  |  {i[4]}  |  "
                                                                 f"{i[5]}  |  {i[6]}  |  {i[7]}")
            if x == 0:
                await bot.send_message(message.from_user.id, "–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç. –•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑?")

        elif message.text == '–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º':
            await bot.send_message(message.from_user.id, '–û—Ç–≤–µ—Ç—ã –Ω–∞ —Å–∞–º—ã–µ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
                                   reply_markup=Client_kb.AandQ_kb)
        else:
            await bot.send_message(message.from_user.id, '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é')


def register_handlers_client(dp: Dispatcher):
    """–§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤"""
    dp.register_message_handler(help_func, commands=['help'], state=None)
    dp.register_message_handler(text)
    dp.register_callback_query_handler(callback=callback_d)
